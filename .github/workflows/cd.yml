---
name: Continuous Deployment

on:
  push:
    branches:
      - master
      - production
  pull_request: []

env:
  CACHE_IMAGE: jaymes15/crypcentra-ico
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Log in to docker hub
        run: docker login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASS }}
      - name: Build Docker images
        run: docker-compose build -t jaymes15/crypcentra-ico:latest --build-arg BUILDKIT_INLINE_CACHE=1
      - name: Push to docker hub
        run: docker push jaymes15/crypcentra-ico:latest

  test:
    name: Test
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test
        run: docker-compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test --settings=app.settings_test"

  lint:
    name: Lint
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Lint
        run: docker-compose run --rm app sh -c "flake8"
  
  isort:
    name: Isort
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Isort
        run: docker-compose run --rm app sh -c "isort ."

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, test, lint, isort]
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v1
    - name: Login to Heroku Container registry
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login 
    - name: Build and push
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web 
    - name: Release
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
    - name: Heroku app config
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_STAGING: ${{ secrets.HEROKU_APP_STAGING }}
        DEBUG_STAGING: ${{ secrets.DEBUG_STAGING }}
      run: heroku container:login && sh ./heroku_env.sh

  # deploy-prod:
  #   name: Deploy to Production
  #   runs-on: ubuntu-20.04
  #   # needs: [test]
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Deploy to Prod
        
  #       run: sh ./heroku_env.sh