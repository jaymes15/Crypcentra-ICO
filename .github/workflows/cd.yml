---
name: Continuous Deployment

on:
  push:
    branches:
      - master
      - production
  pull_request: []

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test
        run: docker-compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"

  # lint:
  #   name: Lint
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Lint
  #       run: docker-compose run --rm app sh -c "flake8"

  # deploy-staging:
  #   name: Deploy to Staging
  #   runs-on: ubuntu-latest
  #   needs: [test, lint]
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Login to Heroku Container registry
  #     env: 
  #       HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #     run: heroku container:login 
  #   - name: Build and push
  #     env:
  #       HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #     run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web 
  #   - name: Release
  #     env:
  #       HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #     run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
  #   - name: Heroku app config
  #     env: 
  #       HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #     run: heroku container:login && sh ./heroku_env.sh

  # deploy-prod:
  #   name: Deploy to Production
  #   runs-on: ubuntu-20.04
  #   # needs: [test]
  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Deploy to Prod
  #       run: sh ./heroku_env.sh